import { HvigorNode, Project } from './src/external/core/hvigor-node.js';
export { DefaultTask } from './src/external/task/default-task';
export { Task } from './src/external/task/task.js';
export * from './src/external/plugin/hvigor-plugin.js';
export * from './src/external/core/hvigor-node.js';
export * from './src/internal/task/core/default-sync-task.js';
export * from './src/options/common-const.js';
export * from './src/log/hvigor-log.js';
export { splitTime } from './src/util/time-util.js';
export * from './src/internal/task/util/task-path-util.js';
export * from './src/internal/task/build/tasks.js';
export { taskExecutorInst } from './src/execute/task-executor.js';
export { defaultModelRegistry } from './src/external/default-tooling-model-bean-registry.js';
export { TaskDetails } from './src/internal/task/interface/task-details-interface.js';
export { projectTaskDag, TaskDirectedAcyclicGraph } from './src/internal/task/core/task-directed-acyclic-graph.js';
export { traceBuildAnalyze } from './src/trace/trace-build-analyze.js';
/**
 * 提供前端工程配置信息的数据类
 *
 * @since 2021/12/09
 */
export declare class Hvigor {
    private _log;
    private _project;
    private _projectDir;
    private _projectConfigFile;
    private _extraConfig;
    private _scriptMap;
    constructor();
    /**
     * 返回Project模型
     *
     * @returns {Project | undefined}
     */
    getProject(): Project | undefined;
    /**
     * 根据hvigorfile的文件位置返回对应node的hvigor 模型
     *
     * @param {string} buildScriptFilePath
     * @returns {HvigorNode | undefined}
     */
    getModuleByScriptPath(buildScriptFilePath: string): HvigorNode | undefined;
    /**
     * 返回在命令行中传递的额外参数
     *
     * @returns {Map<string, string>}
     */
    getExtraConfig(): Map<string, string>;
    /**
     * 保存命令行中的配置
     *
     * @param {Map<string, string>} value
     */
    setExtraConfig(value: Map<string, string>): void;
    /**
     * 以工程根路径下的配置文件，对工程进行初始化
     *
     * @param {string} projectConfigFile 工程级别build-profile.json5的路径
     * @param {string} projectRootDir 工程根路径
     * @returns {Project}
     */
    initRootProject(projectConfigFile: string, projectRootDir: string): Project;
}
/**
 * 一次构建中只存在一个hvigor的单例对象,用来保存和传递全局的信息
 */
export declare const hvigor: Hvigor;
