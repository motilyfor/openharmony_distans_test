"use strict";var __importDefault=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(exports,"__esModule",{value:!0}),exports.taskExecutorInst=exports.TaskExecutor=void 0;const task_directed_acyclic_graph_js_1=require("../internal/task/core/task-directed-acyclic-graph.js"),task_path_util_js_1=require("../internal/task/util/task-path-util.js"),pretty_hrtime_1=__importDefault(require("pretty-hrtime")),time_util_js_1=require("../util/time-util.js"),hvigor_log_js_1=require("../log/hvigor-log.js"),trace_build_analyze_js_1=require("../trace/trace-build-analyze.js"),class_identify_util_js_1=require("../util/class-identify-util.js"),class_type_const_js_1=require("../options/class-type-const.js"),log=hvigor_log_js_1.HvigorLogger.getLogger("hvigor-task-executor");class TaskExecutor{executeTaskByName(e){const t=e.map((e=>{const t=(0,task_path_util_js_1.getModuleFromTaskPath)(e),s=(0,task_path_util_js_1.getTaskNameFromTaskPath)(e),a=t.getTaskContainer();if(!a.hasTask(s))throw new Error(`Cannot find execute task ${s}`);return a.findTask(s)}));this.execute(t)}execute(e){for(const t of e){const e=[...task_directed_acyclic_graph_js_1.projectTaskDag.getChildren(t.getPath()).values()];this.executeTaskByName(e);const s=t;this.executeOneTask(s)}}executeOneTask(e){try{if(!e.getEnabled())return void log._printDisabledTaskInfo(e.getNode().getName(),e.getName());if(!e.getExecuted()){const t=process.hrtime();e.execute();const s=process.hrtime(t),a=(0,time_util_js_1.splitTime)((0,pretty_hrtime_1.default)(s));let r=e.getNode().getName();(0,class_identify_util_js_1.instanceOf)(e.getNode(),class_type_const_js_1.ClassTypeConst.HVIGOR_PROJECT)&&(r=""),log._printTaskExecuteInfo(r,e.getName(),a),recordTraceData(e.getName(),1e9*s[0]+s[1])}}catch(t){log._printFailedTaskInfo(e.getNode().getName(),e.getName()),t&&log.errorExit(t)}}}function recordTraceData(e,t){trace_build_analyze_js_1.traceBuildAnalyze.taskTime.forEach(((s,a)=>{-1!==e.toLowerCase().indexOf(a.toLowerCase())&&s<t&&trace_build_analyze_js_1.traceBuildAnalyze.taskTime.set(a,t)}))}exports.TaskExecutor=TaskExecutor,exports.taskExecutorInst=new TaskExecutor;