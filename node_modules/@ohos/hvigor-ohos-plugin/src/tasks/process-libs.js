"use strict";var __createBinding=this&&this.__createBinding||(Object.create?function(e,t,i,s){void 0===s&&(s=i);var o=Object.getOwnPropertyDescriptor(t,i);o&&!("get"in o?!t.__esModule:o.writable||o.configurable)||(o={enumerable:!0,get:function(){return t[i]}}),Object.defineProperty(e,s,o)}:function(e,t,i,s){void 0===s&&(s=i),e[s]=t[i]}),__setModuleDefault=this&&this.__setModuleDefault||(Object.create?function(e,t){Object.defineProperty(e,"default",{enumerable:!0,value:t})}:function(e,t){e.default=t}),__importStar=this&&this.__importStar||function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var i in e)"default"!==i&&Object.prototype.hasOwnProperty.call(e,i)&&__createBinding(t,e,i);return __setModuleDefault(t,e),t},__importDefault=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(exports,"__esModule",{value:!0}),exports.ProcessLibs=void 0;const fs=__importStar(require("fs-extra")),glob_1=require("glob"),minimatch=__importStar(require("minimatch")),lodash_1=require("lodash"),os_1=__importDefault(require("os")),path_1=__importDefault(require("path")),build_directory_const_js_1=require("../const/build-directory-const.js"),ohos_logger_js_1=require("../utils/log/ohos-logger.js"),build_native_with_ninja_js_1=require("./build-native-with-ninja.js"),task_names_js_1=require("./common/task-names.js"),ohos_hap_task_js_1=require("./task/ohos-hap-task.js");var Task=task_names_js_1.TaskNames.Task;class ProcessLibs extends ohos_hap_task_js_1.OhosHapTask{constructor(e){super(e,Task.PROCESS_LIB),this._log=ohos_logger_js_1.OhosLogger.getLogger(ProcessLibs.name),this._moduleModel=e.getModuleModel(),this._moduleDir=this._moduleModel.getProjectDir()}initTaskDepends(){this.module.registryDependsOnTask(this,new build_native_with_ninja_js_1.BuildNativeWithNinja(this.service))}initHarModuleDepends(){this.service.getModuleDependencyNames().forEach((e=>{this.dependsOn(Task.PROCESS_LIB.name,e)}))}async doTaskAction(e){var t,i,s;const o=e.getPathInfo();let r=null===(t=this._moduleModel.getProfileOpt().buildOption)||void 0===t?void 0:t.napiLibFilterOption;void 0!==(null===(s=null===(i=e.getTargetOpt().config)||void 0===i?void 0:i.buildOption)||void 0===s?void 0:s.napiLibFilterOption)&&(r=e.getTargetOpt().config.buildOption.napiLibFilterOption);const{excludes:a,pickFirsts:n,pickLasts:l,enableOverride:u}={excludes:[],pickFirsts:[],pickLasts:[],enableOverride:!1,...r},d=path_1.default.resolve(o.getIntermediatesCppOutPut()),_=path_1.default.resolve(this._moduleDir,build_directory_const_js_1.BuildDirConst.LIBS),c=this.service.getDependencyRootPaths(),h=this.service.getModuleDependencyPaths(),p=[...(this._moduleModel.isHarModule()?[]:[...(0,lodash_1.difference)(c,h).map((e=>path_1.default.resolve(e,build_directory_const_js_1.BuildDirConst.LIBS))),...h.map((e=>path_1.default.resolve(e,o.getBuildRoot(),"default",build_directory_const_js_1.BuildDirConst.INTERMEDIATES,build_directory_const_js_1.BuildDirConst.LIBS,"default")))]).reverse(),d,_];this._log.debug(`Libs: ${p.join(os_1.default.EOL)}`);const f=o.getIntermediatesProcessLibs();fs.emptyDirSync(f);const g=new Map;p.forEach((e=>{const t=glob_1.glob.sync("**/*.so",{cwd:e});this._log.debug(`Collect files: ${t}`),t.forEach((t=>{if(a.some((e=>minimatch.default(t,e))))return;if(l.some((e=>minimatch.default(t,e)))&&g.has(t))return;if(n.some((e=>minimatch.default(t,e)))||u)return void g.set(t,path_1.default.resolve(e,t));if(!g.has(t))return void g.set(t,path_1.default.resolve(e,t));const i=g.get(t);"string"==typeof i?g.set(t,[i,path_1.default.resolve(e,t)]):null==i||i.push(path_1.default.resolve(e,t))}))}));let m=!1;const b=[];for(const e of g.keys()){const t=g.get(e),i=path_1.default.basename(e);Array.isArray(t)&&t.length>1&&"libc++.so"!==i&&"libc++_shared.so"!==i&&(m=!0,b.push(`${t.length} files found for path 'lib/${e}'. This can cause unexpected errors at runtime.`),t.forEach((e=>{b.push(`- ${e}`)})))}m&&this._log._buildError(b.join(`${os_1.default.EOL}\t `))._solution(`Try to rename native compilation products of modules or configure napiLibFilterOption in ${this._moduleModel.getProfilePath()}`)._printErrorAndExit(this.moduleName),[...g.entries()].forEach((e=>{const[t,i]=e;"string"==typeof i?fs.copySync(i,path_1.default.resolve(f,t)):fs.copySync(i.pop(),path_1.default.resolve(f,t))})),this._log.debug(fs.readdirSync(f))}}exports.ProcessLibs=ProcessLibs;