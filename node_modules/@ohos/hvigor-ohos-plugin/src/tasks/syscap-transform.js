"use strict";var __createBinding=this&&this.__createBinding||(Object.create?function(e,s,t,o){void 0===o&&(o=t);var i=Object.getOwnPropertyDescriptor(s,t);i&&!("get"in i?!s.__esModule:i.writable||i.configurable)||(i={enumerable:!0,get:function(){return s[t]}}),Object.defineProperty(e,o,i)}:function(e,s,t,o){void 0===o&&(o=t),e[o]=s[t]}),__setModuleDefault=this&&this.__setModuleDefault||(Object.create?function(e,s){Object.defineProperty(e,"default",{enumerable:!0,value:s})}:function(e,s){e.default=s}),__importStar=this&&this.__importStar||function(e){if(e&&e.__esModule)return e;var s={};if(null!=e)for(var t in e)"default"!==t&&Object.prototype.hasOwnProperty.call(e,t)&&__createBinding(s,e,t);return __setModuleDefault(s,e),s},__importDefault=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(exports,"__esModule",{value:!0}),exports.SyscapTransform=void 0;const ohos_hap_task_js_1=require("./task/ohos-hap-task.js"),process_utils_js_1=require("../utils/process-utils.js"),common_const_js_1=require("../const/common-const.js"),path_1=__importDefault(require("path")),file_util_js_1=require("../utils/file-util.js"),fs=__importStar(require("fs")),array_util_js_1=require("../utils/array-util.js"),fse=__importStar(require("fs-extra")),lodash_1=require("lodash"),project_file_reader_js_1=require("../utils/project-file-reader.js"),ohos_logger_js_1=require("../utils/log/ohos-logger.js"),task_names_js_1=require("./common/task-names.js");var Task=task_names_js_1.TaskNames.Task;class SyscapTransform extends ohos_hap_task_js_1.OhosHapTask{constructor(e){super(e,Task.SYSCAP_TRANSFORM),this._log=ohos_logger_js_1.OhosLogger.getLogger(SyscapTransform.name),this.hapExtraInfo=e.getHapExtraInfo()}initTaskDepends(){}doTaskAction(e){var s,t;const o=null===(s=this.service.getModuleModel())||void 0===s?void 0:s.getSourceRootByTargetName(e.getTargetName()),i=e.getPathInfo(),r=this.service.getSdkInfo(),n=r.getSdkEtsDir(),a=r.getSdkJsDir(),l=r.getSysCapFileInEts(),c=r.getSysCapFileInJs(),_=/^SystemCapability(\.[a-zA-Z0-9]+){2,3}$/;let d,u;if(this.hapExtraInfo.isStageMode()){const e=path_1.default.resolve(o,common_const_js_1.CommonConst.MODULE_JSON5);u=project_file_reader_js_1.ProjectFileReader.getJson5Obj(e).module.deviceTypes,d=e}else{const e=path_1.default.resolve(o,common_const_js_1.CommonConst.CONFIG_JSON);u=project_file_reader_js_1.ProjectFileReader.getJson5Obj(e).module.deviceType,d=e}const f=path_1.default.resolve(o,common_const_js_1.CommonConst.SYSCAP_JSON);if(fs.existsSync(f)){const e=project_file_reader_js_1.ProjectFileReader.getJson5Obj(f),s=e.devices,o=s.general,r=s.custom,d=[],h=[];let p=[];if(0===u.length){if(void 0!==o&&0!==o.length){const e="The value of 'general' in the syscap.json file must be the same as that of 'deviceType' in the module.json5/config.json file.",s="Please check whether the general field in the syscap.json file and the deviceType field in the module.json5 or config.json file are correctly configured.";this._log._buildError(e)._solution(s)._file(f)._printErrorAndExit()}p=this.intersectNDeviceSysCap(r,h,_,f)}else{if(void 0===o||!(0,array_util_js_1.checkArrayElementIsSame)(o,u)){const e="The 'general' field in the syscap.json file must exist, and its value must be the same as the value of 'devicesType' in the module.json5 or config.json file.",s="Please check whether the syscap.json, module.json5, or config.json files are correctly configured.";this._log._buildError(e)._solution(s)._file(f)._printErrorAndExit()}if(o.forEach((e=>{fs.existsSync(a)&&!fs.existsSync(n)?this.getRequireSysCapList(c,e,d):this.getRequireSysCapList(l,e,d)})),void 0!==r){const e=this.intersectNDeviceSysCap(r,h,_,f);p=e.filter((e=>d.includes(e)))}}if(this.moduleModel.isHarModule())return;const g=e.production;if(void 0!==g&&(void 0!==g.addedSysCaps&&0!==g.addedSysCaps.length&&g.addedSysCaps.forEach((e=>{this.fieldRegExpCheck(e,"addedSysCaps",_,f),p.includes(e)||p.push(e)})),void 0!==g.removedSysCaps&&0!==g.removedSysCaps.length&&g.removedSysCaps.forEach((e=>{this.fieldRegExpCheck(e,"removedSysCaps",_,f),p.includes(e)&&p.splice(p.indexOf(e),1)}))),0===p.length)return;const m=new Map,j=null===(t=this.service.getModuleModel())||void 0===t?void 0:t.getCompileApiVersion();m.set("api_version",j),m.set("syscap",p);const y=i.getIntermediatesSysCap();file_util_js_1.FileUtil.checkDirWithoutDelete(y);const S=path_1.default.resolve(y,common_const_js_1.CommonConst.RPCID_JSON);fse.outputJsonSync(S,Object.fromEntries(m));const v=this.service.getSdkInfo().getSysCapTool();new process_utils_js_1.ProcessUtils(this.moduleName,this.name).executeSync([v,"-R","-e","-i",S,"-o",y])}else if(0===u.length){const e="The 'deviceTypes' field in the module.json5 or config.json file may be empty or does not exist.",s="If the 'deviceTypes' field in the module.json5 or config.json file is empty or does not exist, import and correctly configure the syscap.json file.";this._log._buildError(e)._solution(s)._file(d)._printErrorAndExit()}}getRequireSysCapList(e,s,t){fs.readdirSync(e).forEach((o=>{if(o.toString().slice(0,o.toString().indexOf("."))===s){project_file_reader_js_1.ProjectFileReader.getJson5Obj(path_1.default.resolve(e,o.toString())).SysCaps.forEach((e=>{t.some((s=>s===e))||t.push(e)}))}}))}intersectNDeviceSysCap(e,s,t,o){if(void 0!==e){e.forEach((e=>{Object.keys(e).forEach((t=>{s.push(e[t])}))}));for(let e=0;e<s.length;e++)for(let i=0;i<s[e].length;i++)this.fieldRegExpCheck(s[e][i],"custom",t,o)}return(0,lodash_1.intersection)(...s)}fieldRegExpCheck(e,s,t,o){if(!t.test(e)){const e=`Please check whether the value of '${s}' in the syscap.json is correct.`,i=`Configure correct sysCaps in '${s}' according to the pattern:'${t}'.`;this._log._buildError(e)._solution(i)._file(o)._printErrorAndExit()}}}exports.SyscapTransform=SyscapTransform;