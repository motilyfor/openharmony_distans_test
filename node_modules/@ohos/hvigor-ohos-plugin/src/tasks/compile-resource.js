"use strict";var __importDefault=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(exports,"__esModule",{value:!0}),exports.CompileResource=void 0;const path_1=__importDefault(require("path")),file_util_js_1=require("../utils/file-util.js"),build_directory_const_js_1=require("../const/build-directory-const.js"),ohos_logger_js_1=require("../utils/log/ohos-logger.js"),project_file_reader_js_1=require("../utils/project-file-reader.js"),abstract_compile_resource_js_1=require("./abstract-compile-resource.js"),task_names_js_1=require("./common/task-names.js"),process_profile_js_1=require("./process-profile.js"),merge_resource_js_1=require("./merge-resource.js");var Task=task_names_js_1.TaskNames.Task;class CompileResource extends abstract_compile_resource_js_1.AbstractCompileResource{constructor(e){super(e,Task.COMPILE_RESOURCE),this._log=ohos_logger_js_1.OhosLogger.getLogger(CompileResource.name)}initTaskDepends(){this.module.registryDependsOnTask(this,new merge_resource_js_1.MergeResource(this.service),new process_profile_js_1.ProcessProfile(this.service))}taskShouldDo(e){return void 0!==this.moduleModel.getModuleType()}beforeTask(e){file_util_js_1.FileUtil.checkDirWithoutDelete(e.getPathInfo().getIntermediatesRes()),file_util_js_1.FileUtil.checkDirWithoutDelete(e.getPathInfo().getGenerateSourceR())}doTaskAction(e){const t=e.getPathInfo(),s=this.moduleModel.getParentProject(),r=t.getIntermediatesProcessProfile(),o=this.getCommonResToolBuilder(e);this.service.getModuleModel().isHapModule()&&o.addInputDir(path_1.default.resolve(s.getAppRes().getResourcePath(),"..")),o.addJsonFile(r).addModulePackName(project_file_reader_js_1.ProjectFileReader.getJson5Obj(r).app.bundleName).addOutputDir(t.getIntermediatesRes()).addResTable(path_1.default.resolve(t.getGenerateSourceR(),build_directory_const_js_1.BuildArtifactConst.RESOURCE_TABLE_H)),this.compile(o,this._log)}getRestoolModules(e){return[...new Set([this.moduleModel.getName(),this.moduleModel.getSourceSetByTargetName(e.getTargetName()).getModuleTargetRes().getModuleJsonOpt().module.name,...this.service.getProjectModel().getSubProjects().keys()])]}}exports.CompileResource=CompileResource;