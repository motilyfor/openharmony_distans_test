"use strict";var __createBinding=this&&this.__createBinding||(Object.create?function(e,t,o,r){void 0===r&&(r=o);var s=Object.getOwnPropertyDescriptor(t,o);s&&!("get"in s?!t.__esModule:s.writable||s.configurable)||(s={enumerable:!0,get:function(){return t[o]}}),Object.defineProperty(e,r,s)}:function(e,t,o,r){void 0===r&&(r=o),e[r]=t[o]}),__setModuleDefault=this&&this.__setModuleDefault||(Object.create?function(e,t){Object.defineProperty(e,"default",{enumerable:!0,value:t})}:function(e,t){e.default=t}),__importStar=this&&this.__importStar||function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var o in e)"default"!==o&&Object.prototype.hasOwnProperty.call(e,o)&&__createBinding(t,e,o);return __setModuleDefault(t,e),t},__importDefault=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(exports,"__esModule",{value:!0}),exports.OhosHapTask=void 0;const fse=__importStar(require("fs-extra")),path_1=__importDefault(require("path")),hvigor_base_1=require("@ohos/hvigor-base"),ohos_logger_js_1=require("../../utils/log/ohos-logger.js"),_log=ohos_logger_js_1.OhosLogger.getLogger("hvigor-ohos-hap-task");class OhosHapTask extends hvigor_base_1.DefaultTask{constructor(e,t){super(e.getModuleModel().getModule(),t),this.registryAction=()=>()=>{let e,t=!1;this.targetDataSet.forEach((o=>{const r=o[0];e=r.getProduct().name;const s=o[1]&&this.taskShouldDo(r);o[1]&&(t=!0),s&&(this.beforeTask(r),this.doTaskAction(r))}));this.moduleModel.isHarModule()||t||_log._buildError(`Current product is ${e}.No executable target in ${this.moduleName}.`)._solution("Please check the 'modules/targets/applyToProducts' field in root project build-profile.json5")._file(this.moduleModel.getParentProject().getProfilePath())._printErrorAndExit(this.moduleName)},this.module=e.getModuleModel().getModule(),this.service=e,this.targetDataSet=this.service.getTargetDataSet(),this.moduleModel=this.service.getModuleModel(),this.sdkInfo=this.service.getSdkInfo(),this.moduleName=this.moduleModel.getName(),this.isFaMode=!this.service.getHapExtraInfo().isStageMode(),this.initTaskDepends(),this.initHarModuleDepends()}initHarModuleDepends(){}beforeTask(e){}taskShouldDo(e){return!0}getTaskTempDir(e){const t=path_1.default.resolve(e.getPathInfo().getModuleBuildCachePath(),this.name);return fse.existsSync(t)||fse.mkdirsSync(t),t}}exports.OhosHapTask=OhosHapTask;