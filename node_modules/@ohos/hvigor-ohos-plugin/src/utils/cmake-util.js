"use strict";var __importDefault=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(exports,"__esModule",{value:!0}),exports.CmakeArg=exports.CmakeUtil=void 0;const fs_extra_1=__importDefault(require("fs-extra")),path_1=__importDefault(require("path")),code_type_enum_js_1=require("../enum/code-type-enum.js"),common_const_js_1=require("../const/common-const.js");class CmakeUtil{static getCmakeListDir(e,t){return void 0!==t&&""!==t.trim()||(t="./src/main/cpp/CMakeLists.txt"),path_1.default.resolve(e,t,"..")}static checkAbiFilters(e){return void 0===e||0===e.length?["arm64-v8a","armeabi-v7a"]:e}static nativeTaskCondition(e,t,r){return e.getSourceSetByTargetName(t.getTargetName()).getCodeMap().has(code_type_enum_js_1.CodeType.CPP)&&void 0!==r&&t.getTargetName()!==common_const_js_1.DefaultTargetConst.OHOS_TEST_TARGET}static mergeCommandLine(e,t){const r=CmakeUtil.getArguments(t),s=CmakeUtil.parseCmakeArgs(r,void 0);return CmakeUtil.parseCmakeArgs(e,s),CmakeUtil.toCommandLine(s,e)}static toCommandLine(e,t){const r=[t[0]];return e.forEach((e=>r.push(CmakeUtil.assembleArg(e)))),r}static parseCmakeArgs(e,t){return t=t||new Map,e.forEach((e=>{const r=CmakeUtil.parseArg(e.trim());if(void 0!==r){const e=r.getPrefix()+r.getKey();t.has(e)||t.set(e,r)}})),t}static getArguments(e){return e.split(" ").filter((e=>e.startsWith("-")))}static parseArg(e){if(!e.startsWith("-"))return;const t=e.substring(0,2),r=e.substring(2),s=r.indexOf("=");if(-1===s)return new CmakeArg(t,r,void 0);{const e=r.substring(0,s).trim(),a=r.substring(s+1).trim();return new CmakeArg(t,e,a)}}static assembleArg(e){return void 0===e.getValue()?e.getPrefix()+e.getKey():`${e.getPrefix()+e.getKey()}=${e.getValue()}`}static mkCodeModelRequest(e){fs_extra_1.default.mkdirSync(path_1.default.resolve(e,".cmake","api","v1","query","codemodel-v2"),{recursive:!0})}}exports.CmakeUtil=CmakeUtil;class CmakeArg{constructor(e,t,r){this._prefix=e,this._key=t,this._value=r}getPrefix(){return this._prefix}setPrefix(e){this._prefix=e}getKey(){return this._key}setKey(e){this._key=e}getValue(){return this._value}setValue(e){this._value=e}}exports.CmakeArg=CmakeArg;